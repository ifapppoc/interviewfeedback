{
  "topiclist": [{
    "id": 1,
    "name": "corejava",
    "topic": "Core Java",
    "subtopics": [{
      "value": "Abstract Class"
    },
      {
        "value": "Inner class"
      },
      {
        "value": "static inner class"
      },
      {
        "value": "Immutable class"
      },
      {
        "value": "Interface"
      },
      {
        "value": "Marker Interface"
      },
      {
        "value": "Exception handling"
      },
      {
        "value": "Garbage Collection"
      },
      {
        "value": "Class loader/ static and dynamic loading"
      },
      {
        "value": "Comparable-Comparator"
      },
      {
        "value": "String pool/Buffer/Builder"
      },
      {
        "value": "Constructor chaining"
      },
      {
        "value": "in case of abstract class/ interface"
      },
      {
        "value": "Serialization"
      },
      {
        "value": "Serializable"
      },
      {
        "value": "Externalizable"
      },
      {
        "value": "Iterator/List Iterator"
      },
      {
        "value": "Rules of overloading and overriding"
      },
      {
        "value": "Reflection"
      },
      {
        "value": "Finalize/clone"
      },
      {
        "value": "Cloneable"
      }
    ]
  },
    {
      "id": 2,
      "name": "oops",
      "topic": "OOPS",
      "subtopics": [{
        "value": "OOP"
      },
        {
          "value": "Object Oriented paradigm vs Procedural vs Functional programming"
        },
        {
          "value": "Abstraction"
        },
        {
          "value": "Polymorphism"
        },
        {
          "value": "Encapusulation"
        },
        {
          "value": "Inheritance"
        },
        {
          "value": "Design principles - SOLID"
        },
        {
          "value": "Encapsulate what varies"
        }

      ]
    },
    {
      "id": 3,
      "name": "designpattern",
      "topic": "Design Patterns",
      "subtopics": [{
        "value": "Abstract Factory"
      },
        {
          "value": "Builder"
        },
        {
          "value": "Factory"
        },
        {
          "value": "Prototype"
        },
        {
          "value": "Singleton"
        },
        {
          "value": "Adaptor"
        },
        {
          "value": "Bridge"
        },
        {
          "value": "Composite"
        },
        {
          "value": "Decorator"
        },
        {
          "value": "Fa√ßade"
        },
        {
          "value": "Flyweight"
        },
        {
          "value": "Proxy"
        },
        {
          "value": "Chain of Responsibility"
        },
        {
          "value": "Command"
        },
        {
          "value": "Interpreter"
        },
        {
          "value": "Iterator"
        },
        {
          "value": "Mediator"
        },
        {
          "value": "Memento"
        },
        {
          "value": "Observer"
        },
        {
          "value": "State"
        },
        {
          "value": "Strategy"
        },
        {
          "value": "Template Method"
        },
        {
          "value": "Visitor"
        }
      ]
    },
    {
      "id": 4,
      "name": "multihreading",
      "topic": "Multi-Threading",
      "subtopics": [{
        "value": "Concurrency vs Parallelism"
      },
        {
          "value": "Creating Threads"
        },
        {
          "value": "ThreadLocal"
        },
        {
          "value": "Volatile"
        },
        {
          "value": "Thread LifeCycle"
        },
        {
          "value": "Synchronized"
        },
        {
          "value": "Intrinsic Locks"
        },
        {
          "value": "Atomic Access"
        },
        {
          "value": "Lock API"
        },
        {
          "value": "ThreadLocal"
        },
        {
          "value": "DeadLock"
        },
        {
          "value": "Starvation"
        },
        {
          "value": "LiveLock"
        },
        {
          "value": "BlockingQueue"
        },
        {
          "value": "Producer Consumer"
        },
        {
          "value": "Cyclic Barrier"
        },
        {
          "value": "Countdown Latch"
        },
        {
          "value": "Semaphore"
        },
        {
          "value": "Executor Service"
        },
        {
          "value": "Fork Join"
        },
        {
          "value": "Concurrent Collections"
        },
        {
          "value": "Case Studies & Use Cases & Applications of MT"
        }
      ]
    },
    {
      "id": 5,
      "name": "collections",
      "topic": "Collections",
      "subtopics": [{
        "value": "ArrayList"
      },
        {
          "value": "LinkedList"
        },
        {
          "value": "Queue"
        },
        {
          "value": "Stack"
        },
        {
          "value": "CopyOnWriteArrayList"
        },
        {
          "value": "PriorityQueue"
        },
        {
          "value": "BlockingQueue"
        },
        {
          "value": "HashSet"
        },
        {
          "value": "HashMap"
        },
        {
          "value": "ConcurrentHashMap"
        },
        {
          "value": "ConcurrentSkipListMap"
        },
        {
          "value": "TreeSet"
        },
        {
          "value": "TreeMap"
        },
        {
          "value": "ConcurrentSkipListMap"
        },
        {
          "value": "LinkedHashMap"
        },
        {
          "value": "LinkedHashSet"
        }
      ]
    },
    {
      "id": 6,
      "name": "springcore",
      "topic": "Spring Core",
      "subtopics": [{
        "value": "Core"
      },
        {
          "value": "IOC"
        },
        {
          "value": "DI"
        },
        {
          "value": "Beans"
        },
        {
          "value": "Autowiring"
        },
        {
          "value": "AOP"
        }
      ]
    },
    {
      "id": 7,
      "name": "springmvc",
      "topic": "Spring MVC",
      "subtopics": [{
        "value": "Basics of MVC"
      }]
    },
    {
      "id": 8,
      "name": "hibernate",
      "topic": "Hibernate",
      "subtopics": [{
        "value": "Basics of Hibernate"
      }]
    },
    {
      "id": 9,
      "name": "webservices",
      "topic": "Web Services",
      "subtopics": [{
        "value": "SOAP"
      },
        {
          "value": "REST"
        }
      ]
    },
    {
      "id": 10,
      "name": "database",
      "topic": "Database",
      "subtopics": [{
        "value": "RDBMS Concepts"
      },
        {
          "value": "Normalization"
        },
        {
          "value": "DDL"
        },
        {
          "value": "DML"
        },
        {
          "value": "DCL"
        },
        {
          "value": "Types of Joins"
        },
        {
          "value": "Inner queries"
        },
        {
          "value": "Aggregate functions"
        },
        {
          "value": "Clustered vs NonClustered Indexes"
        },
        {
          "value": "Bitmap vs B-Tree Indexes"
        },
        {
          "value": "Materialized Views"
        }
      ]
    },
    {
      "id": 11,
      "name": "springrest",
      "topic": "Spring REST",
      "subtopics": [{
        "value": "SOAP vs REST"
      },
        {
          "value": "Spring REST"
        }
      ]
    },
    {
      "id": 12,
      "name": "datastructureandalgo",
      "topic": "Data Structure & Algo",
      "subtopics": [{
        "value": "Array"
      },
        {
          "value": "Stack"
        },
        {
          "value": "Queue"
        },
        {
          "value": "Vector"
        },
        {
          "value": "Binary Search"
        },
        {
          "value": "Complexity"
        }
      ]
    },
    {
      "id": 13,
      "name": "problemsolving",
      "topic": "Problem Solving",
      "subtopics": []
    }
  ]
}